{"content": "Also known as \u201cBaneChant\u201d, MM Core is a\u00a0file-less APT which is executed in memory by a downloader component. It\u00a0was first reported in 2013 under the version number \u201c2.0-LNK\u201d where it\u00a0used the tag \u201cBaneChant\u201d in its command-and-control (C2) network request. A second version \u201c2.1-LNK\u201d with the network tag \u201cStrangeLove\u201d was discovered shortly after. In this blog we will detail our discovery of\u00a0the next two versions of MM Core,\u00a0namely \u201cBigBoss\u201d (2.2-LNK) and \u201cSillyGoose\u201d (2.3-LNK). Attacks using \"BigBoss\" appear likely to have occurred since mid-2015, whereas\u00a0\"SillyGoose\"\u00a0appears to have been distributed since September 2016. In 2013 MM Core was reported to target Middle Eastern and Central Asian countries. Our own telemetry suggests that both\u00a0Africa\u00a0and the\u00a0United States\u00a0have also been recent targets. The following list shows the targeted industries we have observed: However, the new DOC exploit we found exploits a more recent CVE-2015-1641 Microsoft Word vulnerability which it uses to extract embedded malware. The extracted malware is then executed by leveraging a\u00a0DLL side-loading\u00a0vulnerability. The DOC file we analysed (SHA1 d336b8424a65f5c0b83328aa89089c2e4ddbcf72) was named \u201cUS pak track ii naval dialogues.doc\u201d. This document exploits CVE-2015-1641 and executes\u00a0shellcode which drops a legitimate Microsoft executable along with a trojanised DLL named \u201cChoiceGuard.dll\u201d. The shellcode then executes the Microsoft executable, causing the malicious DLL to automatically be loaded into the file when it is run - hence the term \"side-loading\". The DLL downloads and executes the file-less MM Core backdoor in memory, which uses steganography to hide itself\u00a0inside a JPEG file. The JPEG contains code to decrypt itself using the\u00a0Shikata ga nai\u00a0algorithm. Once decrypted and executed in memory, the MM Core backdoor\u00a0will extract and install an embedded downloader when it is first run and add it to\u00a0Windows start-up for persistence. This downloader, which is similar to the first trojanised DLL, is then executed and will download the MM Core JPEG once again, executing it in memory like before. This time MM Core will conduct its backdoor routine which will send off system information and await further commands.", "sourcefile": "59.txt", "cyberevent": {"hopper": [{"index": 0, "relation": "Same", "events": [{"index": "E4", "type": "Vulnerability-related", "realis": "Actual", "nugget": {"startOffset": 909, "index": "T19", "endOffset": 914, "text": "found"}, "argument": [{"index": "T18", "text": "extract embedded malware", "endOffset": 1022, "role": {"CAPEC-Meta": "Code Inclusion", "type": "Capabilities", "confidence": 0.8978213369846344}, "startOffset": 998, "type": "Capabilities"}, {"index": "T14", "text": "CVE-2015-1641", "endOffset": 951, "role": {"type": "CVE"}, "startOffset": 938, "type": "CVE"}, {"index": "T15", "external_reference": {"wikidataid": "Q11261"}, "endOffset": 966, "role": {"type": "Vulnerable_System"}, "text": "Microsoft Word", "startOffset": 952, "type": "Software"}, {"index": "T16", "text": "vulnerability", "endOffset": 980, "role": {"type": "Vulnerability"}, "startOffset": 967, "type": "Vulnerability"}, {"index": "T17", "text": "the new DOC exploit", "endOffset": 905, "role": {"type": "Vulnerability"}, "startOffset": 886, "type": "Vulnerability"}], "subtype": "DiscoverVulnerability"}, {"index": "E1", "type": "Vulnerability-related", "realis": "Actual", "nugget": {"startOffset": 1127, "index": "T5", "endOffset": 1135, "text": "analysed"}, "argument": [{"index": "T6", "text": "we", "endOffset": 1126, "role": {"type": "Discoverer"}, "startOffset": 1124, "type": "Person"}, {"index": "T2", "text": "The DOC file", "endOffset": 1123, "role": {"type": "Vulnerability"}, "startOffset": 1111, "type": "Vulnerability"}, {"index": "T7", "text": "US pak track ii naval dialogues.doc", "endOffset": 1230, "role": {"type": "Vulnerability"}, "startOffset": 1195, "type": "Vulnerability"}, {"index": "T3", "text": "CVE-2015-1641", "endOffset": 1269, "role": {"type": "CVE"}, "startOffset": 1256, "type": "CVE"}, {"index": "T1", "text": "executes\u00a0shellcode", "endOffset": 1292, "role": {"CAPEC-Meta": "Local Execution of Code", "type": "Capabilities", "confidence": 0.875762015581131}, "startOffset": 1274, "type": "Capabilities"}], "subtype": "DiscoverVulnerability"}]}]}, "info": {"title": "MM Core In-Memory Backdoor Returns as \"BigBoss\" and \"SillyGoose\" | Forcepoint", "date": "2017_01_05", "type": "text", "link": "https://blogs.forcepoint.com/security-labs/mm-core-memory-backdoor-returns-bigboss-and-sillygoose"}}